name: build-and-deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

env:
  DOCKER_HUB_ORGANISATION: rtgsglobal
  SOLUTION_FOLDER: src/RTGS.IDCrypt.Service/
  CONTRACTS_FOLDER: src/RTGS.IDCrypt.Service/RTGS.IDCrypt.Service.Contracts/
  NUGET_URL: https://api.nuget.org/v3/index.json
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  SERVICE_DOCKER_FILE: ${{env.SOLUTION_FOLDER}}/RTGS.IDCrypt.Service/Dockerfile
  SCHEDULER_DOCKER_FILE: ${{env.SOLUTION_FOLDER}}/RTGS.IDCrypt.Service.Scheduler/Dockerfile

jobs:
  build-and-test:
    name: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dotnet Tool Manifest
        run: dotnet new tool-manifest
      - name: Install dotnet format
        run: dotnet tool install dotnet-format
      - name: dotnet Format
        run: dotnet format ${{env.SOLUTION_FOLDER}} --verify-no-changes
      - name: Run Azurite Table Storage
        run: docker run --name azurite -d -p 10002:10002 mcr.microsoft.com/azure-storage/azurite azurite-table --tableHost 0.0.0.0 --tablePort 10002
      - name: Build & run ID Crypt Service tests
        run: docker build -f ${{env.SERVICE_DOCKER_FILE}} ${{env.SOLUTION_FOLDER}} --target build --network=host
      - name: Build & run ID Crypt Service tests
        run: docker build -f ${{env.SCHEDULER_DOCKER_FILE}} ${{env.SOLUTION_FOLDER}} --target build --network=host
      - name: Remove Azurite Table Storage
        run: docker rm -f azurite

  publish-to-docker:
    name: publish-to-docker
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build-and-test
    env:
      DOCKER_HUB_REPO: idcrypt-service-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_HUB_ORGANISATION }}/${{ env.DOCKER_HUB_REPO }}
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Run Azurite Table Storage
        run: docker run --name azurite -d -p 10002:10002 mcr.microsoft.com/azure-storage/azurite azurite-table --tableHost 0.0.0.0 --tablePort 10002
      - name: Build and push Service Docker image
        uses: docker/build-push-action@v2
        with:
          file: ${{env.SERVICE_DOCKER_FILE}}
          context: ${{env.SOLUTION_FOLDER}}
          push: true
          tags: ${{ env.DOCKER_HUB_ORGANISATION }}/${{ env.DOCKER_HUB_REPO }}:service-${{ github.run_number }}
          network: host
      - name: Build and push Scheduler Docker image
        uses: docker/build-push-action@v2
        with:
          file: ${{env.SCHEDULER_DOCKER_FILE}}
          context: ${{env.SOLUTION_FOLDER}}
          push: true
          tags: ${{ env.DOCKER_HUB_ORGANISATION }}/${{ env.DOCKER_HUB_REPO }}:scheduler-${{ github.run_number }}
          network: host
      - name: Remove Azurite Table Storage
        run: docker rm -f azurite

  trigger-devops-pipeline:
    name: trigger-devops-pipeline
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: publish-to-docker
    steps:
      - name: Azure Pipelines Action
        # The following does need to be 1.2 (or later) otherwise the azure-pipeline-variables are not passed to the pipeline.
        uses: Azure/pipelines@v1.2
        with:
          azure-devops-project-url: ${{ secrets.AZURE_DEVOPS_PROJECT_URL }}
          azure-pipeline-name: ${{ secrets.AZURE_DEVOPS_IDCRYPT_SERVICE_DEPLOYMENT_PIPELINE }}
          azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
          azure-pipeline-variables: '{"IdCryptServiceVersion": "${{ github.run_number }}"}'

  publish-to-docker-release:
    name: publish-to-docker-release
    if: github.event_name == 'release'
    needs: build-and-test
    env:
      DOCKER_HUB_REPO: idcrypt-service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_HUB_ORGANISATION }}/${{ env.DOCKER_HUB_REPO }}
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Run Azurite Table Storage
        run: docker run --name azurite -d -p 10002:10002 mcr.microsoft.com/azure-storage/azurite azurite-table --tableHost 0.0.0.0 --tablePort 10002
      - name: Build and push Service Docker image
        uses: docker/build-push-action@v2
        with:
          file: ${{env.SERVICE_DOCKER_FILE}}
          context: ${{env.SOLUTION_FOLDER}}
          push: true
          tags: ${{ env.DOCKER_HUB_ORGANISATION }}/${{ env.DOCKER_HUB_REPO }}:service-${{ github.run_number }}
          network: host
      - name: Build and push Scheduler Docker image
        uses: docker/build-push-action@v2
        with:
          file: ${{env.SCHEDULER_DOCKER_FILE}}
          context: ${{env.SOLUTION_FOLDER}}
          push: true
          tags: ${{ env.DOCKER_HUB_ORGANISATION }}/${{ env.DOCKER_HUB_REPO }}:scheduler-${{ github.run_number }}
          network: host
      - name: Remove Azurite Table Storage
        run: docker rm -f azurite

  publish-to-nuget:
    if: github.event_name == 'release'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: dotnet build and publish
        run: |
          dotnet build --configuration Release ${{env.SOLUTION_FOLDER}}
          dotnet pack -c Release ${{env.CONTRACTS_FOLDER}}RTGS.IDCrypt.Service.Contracts.csproj
      - name: 'dotnet publish'
        run: |
          dotnet nuget push ${{env.CONTRACTS_FOLDER}}bin/Release/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s ${{env.NUGET_URL}}

  
  generate-docs:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-and-test
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1

      - name: Setup DocFX
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install docfx

      - name: DocFX Build
        run: docfx docs/docfx.json
        continue-on-error: false

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: doc-site
          path: 'docs/_site'
